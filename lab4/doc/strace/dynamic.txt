execve("./test_dynamic", ["./test_dynamic"], 0xfffffc285a30 /* 9 vars */) = 0
brk(NULL)                               = 0xaaaacb509000
mmap(NULL, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0xffffa7ded000
faccessat(AT_FDCWD, "/etc/ld.so.preload", R_OK) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/etc/ld.so.cache", O_RDONLY|O_CLOEXEC) = 3
fstat(3, {st_mode=S_IFREG|0644, st_size=8467, ...}) = 0
mmap(NULL, 8467, PROT_READ, MAP_PRIVATE, 3, 0) = 0xffffa7dea000
close(3)                                = 0
openat(AT_FDCWD, "/lib/aarch64-linux-gnu/libc.so.6", O_RDONLY|O_CLOEXEC) = 3
read(3, "\177ELF\2\1\1\3\0\0\0\0\0\0\0\0\3\0\267\0\1\0\0\0\360\206\2\0\0\0\0\0"..., 832) = 832
fstat(3, {st_mode=S_IFREG|0755, st_size=1722920, ...}) = 0
mmap(NULL, 1892240, PROT_NONE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_DENYWRITE, -1, 0) = 0xffffa7be6000
mmap(0xffffa7bf0000, 1826704, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0) = 0xffffa7bf0000
munmap(0xffffa7be6000, 40960)           = 0
munmap(0xffffa7dae000, 24464)           = 0
mprotect(0xffffa7d8a000, 77824, PROT_NONE) = 0
mmap(0xffffa7d9d000, 20480, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x19d000) = 0xffffa7d9d000
mmap(0xffffa7da2000, 49040, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0xffffa7da2000
close(3)                                = 0
set_tid_address(0xffffa7dedfb0)         = 177
set_robust_list(0xffffa7dedfc0, 24)     = 0
rseq(0xffffa7dee600, 0x20, 0, 0xd428bc00) = 0
mprotect(0xffffa7d9d000, 12288, PROT_READ) = 0
mprotect(0xaaaabb0bf000, 4096, PROT_READ) = 0
mprotect(0xffffa7df2000, 8192, PROT_READ) = 0
prlimit64(0, RLIMIT_STACK, NULL, {rlim_cur=8192*1024, rlim_max=RLIM64_INFINITY}) = 0
munmap(0xffffa7dea000, 8467)            = 0
getrandom("\xb8\x97\xcc\x24\x88\x6e\xbd\x24", 8, GRND_NONBLOCK) = 8
brk(NULL)                               = 0xaaaacb509000
brk(0xaaaacb52a000)                     = 0xaaaacb52a000
openat(AT_FDCWD, "./libprime.so", O_RDONLY|O_CLOEXEC) = 3
read(3, "\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0\267\0\1\0\0\0\0\0\0\0\0\0\0\0"..., 832) = 832
fstat(3, {st_mode=S_IFREG|0755, st_size=69672, ...}) = 0
getcwd("/root/lab4/src", 128)           = 15
mmap(NULL, 196656, PROT_NONE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_DENYWRITE, -1, 0) = 0xffffa7bbf000
mmap(0xffffa7bc0000, 131120, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0) = 0xffffa7bc0000
munmap(0xffffa7bbf000, 4096)            = 0
munmap(0xffffa7be1000, 57392)           = 0
mprotect(0xffffa7bc1000, 122880, PROT_NONE) = 0
mmap(0xffffa7bdf000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0xf000) = 0xffffa7bdf000
close(3)                                = 0
openat(AT_FDCWD, "/etc/ld.so.cache", O_RDONLY|O_CLOEXEC) = 3
fstat(3, {st_mode=S_IFREG|0644, st_size=8467, ...}) = 0
mmap(NULL, 8467, PROT_READ, MAP_PRIVATE, 3, 0) = 0xffffa7dea000
close(3)                                = 0
openat(AT_FDCWD, "/lib/aarch64-linux-gnu/libm.so.6", O_RDONLY|O_CLOEXEC) = 3
read(3, "\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0\267\0\1\0\0\0\0\0\0\0\0\0\0\0"..., 832) = 832
fstat(3, {st_mode=S_IFREG|0644, st_size=591800, ...}) = 0
mmap(NULL, 720920, PROT_NONE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_DENYWRITE, -1, 0) = 0xffffa7b0f000
mmap(0xffffa7b10000, 655384, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0) = 0xffffa7b10000
munmap(0xffffa7b0f000, 4096)            = 0
munmap(0xffffa7bb1000, 57368)           = 0
mprotect(0xffffa7b95000, 106496, PROT_NONE) = 0
mmap(0xffffa7baf000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x8f000) = 0xffffa7baf000
close(3)                                = 0
mprotect(0xffffa7baf000, 4096, PROT_READ) = 0
mprotect(0xffffa7bdf000, 4096, PROT_READ) = 0
munmap(0xffffa7dea000, 8467)            = 0
openat(AT_FDCWD, "./libpi.so", O_RDONLY|O_CLOEXEC) = 3
read(3, "\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0\267\0\1\0\0\0\0\0\0\0\0\0\0\0"..., 832) = 832
fstat(3, {st_mode=S_IFREG|0755, st_size=69272, ...}) = 0
getcwd("/root/lab4/src", 128)           = 15
mmap(NULL, 196640, PROT_NONE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_DENYWRITE, -1, 0) = 0xffffa7adf000
mmap(0xffffa7ae0000, 131104, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0) = 0xffffa7ae0000
munmap(0xffffa7adf000, 4096)            = 0
munmap(0xffffa7b01000, 57376)           = 0
mprotect(0xffffa7ae1000, 122880, PROT_NONE) = 0
mmap(0xffffa7aff000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0xf000) = 0xffffa7aff000
close(3)                                = 0
mprotect(0xffffa7aff000, 4096, PROT_READ) = 0
fstat(1, {st_mode=S_IFCHR|0620, st_rdev=makedev(0x88, 0x1), ...}) = 0
write(1, "Input program code:\n", 20Input program code:
)   = 20
write(1, " 0 -> Library switch\n", 21 0 -> Library switch
)  = 21
write(1, " 1 -> PrimeCount\n", 17 1 -> PrimeCount
)      = 17
write(1, " 2 -> Pi\n", 9 2 -> Pi
)               = 9
write(1, "-1 -> Exit\n", 11-1 -> Exit
)            = 11
fstat(0, {st_mode=S_IFCHR|0620, st_rdev=makedev(0x88, 0x1), ...}) = 0
read(0, 1
"1\n", 1024)                    = 2
write(1, "Enter A and B: ", 15Enter A and B: )         = 15
read(0, 1 10
"1 10\n", 1024)                 = 5
write(1, "PrimeCount(1, 10) = 4\n", 22PrimeCount(1, 10) = 4
) = 22
write(1, "Implementation used: Naive\n", 27Implementation used: Naive
) = 27
write(1, "Input program code:\n", 20Input program code:
)   = 20
write(1, " 0 -> Library switch\n", 21 0 -> Library switch
)  = 21
write(1, " 1 -> PrimeCount\n", 17 1 -> PrimeCount
)      = 17
write(1, " 2 -> Pi\n", 9 2 -> Pi
)               = 9
write(1, "-1 -> Exit\n", 11-1 -> Exit
)            = 11
read(0, 0
"0\n", 1024)                    = 2
write(1, "Library switched successfully!\n", 31Library switched successfully!
) = 31
write(1, "Current PrimeCount implementatio"..., 48Current PrimeCount implementation: Eratosthenes
) = 48
write(1, "Current Pi implementation: Walli"..., 34Current Pi implementation: Wallis
) = 34
write(1, "Input program code:\n", 20Input program code:
)   = 20
write(1, " 0 -> Library switch\n", 21 0 -> Library switch
)  = 21
write(1, " 1 -> PrimeCount\n", 17 1 -> PrimeCount
)      = 17
write(1, " 2 -> Pi\n", 9 2 -> Pi
)               = 9
write(1, "-1 -> Exit\n", 11-1 -> Exit
)            = 11
read(0, 1
"1\n", 1024)                    = 2
write(1, "Enter A and B: ", 15Enter A and B: )         = 15
read(0, 1 10
"1 10\n", 1024)                 = 5
write(1, "PrimeCount(1, 10) = 4\n", 22PrimeCount(1, 10) = 4
) = 22
write(1, "Implementation used: Eratosthene"..., 34Implementation used: Eratosthenes
) = 34
write(1, "Input program code:\n", 20Input program code:
)   = 20
write(1, " 0 -> Library switch\n", 21 0 -> Library switch
)  = 21
write(1, " 1 -> PrimeCount\n", 17 1 -> PrimeCount
)      = 17
write(1, " 2 -> Pi\n", 9 2 -> Pi
)               = 9
write(1, "-1 -> Exit\n", 11-1 -> Exit
)            = 11
read(0, -1
"-1\n", 1024)                   = 3
munmap(0xffffa7bc0000, 131120)          = 0
munmap(0xffffa7b10000, 655384)          = 0
munmap(0xffffa7ae0000, 131104)          = 0
lseek(0, -1, SEEK_CUR)                  = -1 ESPIPE (Illegal seek)
exit_group(0)                           = ?
+++ exited with 0 +++